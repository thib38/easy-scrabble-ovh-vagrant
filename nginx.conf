
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
error_log  /var/log/nginx/error.log notice;

#pid        /var/log/nginx.pid;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

 	
    sendfile        on;
    keepalive_timeout  65;
    
    server {
        listen       4321 ssl;
        server_name  localhost;

		large_client_header_buffers 4 256k;

		ssl_certificate /etc/ssl/certs/scrabble-backend-selfsigned.crt;
        ssl_certificate_key /etc/ssl/private/scrabble-backend-selfsigned.key;

        ssl_protocols TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_dhparam /etc/nginx/dhparam.pem;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
        ssl_session_timeout  10m;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off; # Requires nginx >= 1.5.9
        ssl_stapling on; # Requires nginx >= 1.3.7
        ssl_stapling_verify on; # Requires nginx => 1.3.7
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;
        # Disable strict transport security for now. You can uncomment the following
        # line if you understand the implications.
        # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";


       location / {
			#	 Simple requests
			if ($request_method ~* "(GET|POST)") {
				add_header "Access-Control-Allow-Origin"  '*' always;
			}

			# Preflighted requests
			if ($request_method = OPTIONS ) {
				add_header "Access-Control-Allow-Origin"  '*' always;
				add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
				add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
				return 200;
			}

			root   /scrabble/html;
			index  scrabble.html;
       }


		# proxy ping_hug, start_game, play_4_player, hint_4_player to localhost waitress on port 8000
        #
		location /ping_hug {
			#	 Simple requests
			if ($request_method ~* "(GET|POST)") {
				add_header "Access-Control-Allow-Origin"  '*' always;
			}

			# Preflighted requests
			if ($request_method = OPTIONS ) {
				add_header "Access-Control-Allow-Origin"  '*' always;
				add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
				add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
				return 200;
			}
            proxy_pass   http://127.0.0.1:8000;
        }
		
		location /start_game {
			#	 Simple requests
			if ($request_method ~* "(GET|POST)") {
				add_header "Access-Control-Allow-Origin"  '*' always;
			}

			# Preflighted requests
			if ($request_method = OPTIONS ) {
				add_header "Access-Control-Allow-Origin"  '*' always;
				add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
				add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
				return 200;
			}
            proxy_pass   http://127.0.0.1:8000;
        }
        
		location /play_4_player {
			if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                #
                # Om nom nom cookies
                #
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                #
                # Custom headers and headers various browsers *should* be OK with but aren't
                #
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
                #
                # Tell client that this pre-flight info is valid for 20 days
                #
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
             }
             if ($request_method = 'POST') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
             }
             if ($request_method = 'GET') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
             }
            proxy_pass   http://127.0.0.1:8000;
        }
        
		location /hint_4_player {
			#	 Simple requests
			if ($request_method ~* "(GET|POST)") {
				add_header "Access-Control-Allow-Origin"  '*' always;
			}

			# Preflighted requests
			if ($request_method = OPTIONS ) {
				add_header "Access-Control-Allow-Origin"  '*' always;
				add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
				add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
				return 200;
			}
            proxy_pass   http://127.0.0.1:8000;
        }
        
    }

}
